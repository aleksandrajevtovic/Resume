.error {
  /* height: 90vh; */
}

.error .glitch {
  /* font-size: calc(10rem + 5vw); */
  font-size: calc(4.5rem + 3vw);
    line-height: 1;
    /* text-transform: uppercase; */
    padding: 0 0.5rem;
}

.error .glitch::before,
.error .glitch::after {
  display: block;
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  opacity: 0.8;
}

.error .glitch:after {
  color: #9e6eb8;
  z-index: -2;
  animation: glitch 0.7s cubic-bezier(0.25, 0.46, 0.45, 0.94) both reverse infinite;
}

.error .glitch:before {
  color: #6ea0b8;
  z-index: -1;
  animation: glitch 0.7s cubic-bezier(0.25, 0.46, 0.45, 0.94) both infinite;
}


.btn-glitch {
  animation: glitchy 0.3s ease 1;
}

.btn-glitch:before,
.btn-glitch:after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.btn-glitch:before {
  border: 1px solid #6ea0b8;
  z-index: -1;
  animation: glitchy 0.3s ease 0.3s infinite;
}

.btn-glitch:after {
  border: 1px solid #f0f;
  z-index: -2;
  animation: glitchy 0.3s ease infinite reverse;
}

.btn-glitch:hover::before,
.btn-glitch:hover::after {
  animation: none;
}

.paragraph-glitch {
  color: var(--light);
  font-family: var(--ffSecondary);
  font-size: clamp(1.4rem, 2.2vw, 3rem);
  font-weight: 300;
}

.paragraph-glitch:before,
.paragraph-glitch:after {
  content: attr(data-content);
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.paragraph-glitch:before {
  color: #6ea0b8;
  z-index: -1;
  animation: glitchy 0.6s ease 0.6s infinite;
}

.paragraph-glitch:after {
  color: #9e6eb8;
  z-index: -2;
  animation: glitchy 0.6s ease infinite reverse;
}

@keyframes glitchy {
  0% {
    transform: translate(-2px, 2px);
  }

  25% {
    transform: translate(-2px, -2px);
  }

  50% {
    transform: translate(2px, 2px);
  }

  75% {
    transform: translate(2px, -2px);
  }

  100% {
    transform: translate(-2px, 2px);
  }
}

@keyframes glitch {
  0% {
    transform: translate(0);
  }

  20% {
    transform: translate(-3px, 3px);
  }

  40% {
    transform: translate(-3px, -3px);
  }

  60% {
    transform: translate(3px, 3px);
  }

  80% {
    transform: translate(3px, -3px);
  }

  to {
    transform: translate(0);
  }
}

.object .shape {
  position: absolute;
  display: none;
}


@keyframes movingleftright1 {
  0% {
    transform: translateX(0) translateY(0);
  }

  40% {
    transform: translateX(50px) translateY(-200px);
  }

  75% {
    transform: translateX(800px);
  }

  100% {
    transform: translateY(0) translateX(0);
  }
}

@keyframes movingleftright2 {
  0% {
    transform: translateX(0) translateY(0);
  }

  40% {
    transform: translateX(-50px) translateY(200px);
  }

  75% {
    transform: translateX(-180px);
  }

  100% {
    transform: translateY(0) translateX(0);
  }
}

@keyframes semi-rotate-anim {
  50% {
    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transform: translateY(25px) rotate(-53deg);
  }
}

@keyframes rotate3d {
  0% {
    transform: rotateY(0deg);
  }

  100% {
    transform: rotateY(360deg);
  }
}

@keyframes rotating {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

@keyframes swing-anim {
  65% {
    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transform: translateY(-48px) rotate(-75deg);
  }
}

@media (min-width: 640px) {
  .object .shape {
    display: block;
  }

  .object .shape.shape1 {
    top: 380px;
    left: 190px;
    animation: movingleftright1 infinite 20000ms;
  }

  .object .shape.shape2 {
    top: 170px;
    right: 350px;
    animation: movingleftright2 infinite 30000ms;
  }

  .object .shape.shape3 {
    top: 80px;
    right: 350px;
    animation: semi-rotate-anim 9.6s cubic-bezier(0.4, 0, 0.2, 1) infinite;
  }

  .object .shape.shape4 {
    top: 600px;
    right: 170px;
    animation: rotate3d 4s linear infinite;
  }

  .object .shape.shape5 {
    top: 460px;
    left: 80px;
    animation: rotating 5s linear infinite;
  }

  .object .shape.shape6 {
    left: 4%;
    top: 20%;
    animation: swing-anim 10s cubic-bezier(0.4, 0, 0.2, 1) infinite;
  }

}
